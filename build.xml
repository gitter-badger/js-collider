<!--
 * JS-Collider framework.
 * Copyright (C) 2013 Sergey Zubarev
 * info@js-labs.org
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<project name="JS-Collider">

    <property name="OUT_DIR" location="out/production"/>

    <macrodef name="run-test">
        <attribute name="name"/>
        <sequential>
            <java classname="org.jsl.tests.@{name}.Main" fork="true">
                <classpath>
                    <pathelement location="${OUT_DIR}/core"/>
                    <pathelement location="${OUT_DIR}/tests"/>
                </classpath>
                <jvmarg value="-ea"/>
                <!--<jvmarg value="-Djava.util.logging.config.file=tests\logging.config"/>-->
            </java>
        </sequential>
    </macrodef>

    <target name="clean">
        <delete dir="out"/>
    </target>

    <target name="compile">
        <mkdir dir="${OUT_DIR}/core"/>
        <javac srcdir="core/src" destdir="${OUT_DIR}/core" includeantruntime="false" debug="true"/>
    </target>

    <target name="dist" depends="compile">
        <jar jarfile="out/${ant.project.name}.jar" basedir="${OUT_DIR}/core">
            <manifest>
                <attribute name="Implementation-Title" value="${ant.project.name}"/>
                <attribute name="Implementation-Vendor" value="org.jsl"/>
                <attribute name="Implementation-Version" value="0.9"/>
                <attribute name="Sealed" value="true"/>
            </manifest>
        </jar>
    </target>

    <target name="compile_tests" depends="compile">
        <mkdir dir="${OUT_DIR}/tests"/>
        <javac srcdir="tests/src" destdir="${OUT_DIR}/tests" includeantruntime="false" debug="true">
            <classpath>
                <pathelement location="${OUT_DIR}/core"/>
            </classpath>
        </javac>
    </target>

    <target name="test.binary_queue" depends="compile_tests">
        <run-test name="binary_queue"/>
    </target>

    <target name="test.buffer_overlap_copy" depends="compile_tests">
        <run-test name="buffer_overlap_copy"/>
    </target>

    <target name="test.sched_latency" depends="compile_tests">
        <run-test name="sched_latency"/>
    </target>

    <target name="test.thread_pool" depends="compile_tests">
        <run-test name="thread_pool"/>
    </target>

    <target name="test.thread_pool_throughput" depends="compile_tests">
        <run-test name="thread_pool_throughput"/>
    </target>

    <target name="test.session_latency" depends="compile_tests">
        <run-test name="session_latency"/>
    </target>

    <target name="test.session_throughput" depends="compile_tests">
        <run-test name="session_throughput"/>
    </target>

    <target name="test.send_throughput" depends="compile_tests">
        <run-test name="send_throughput"/>
    </target>

    <target name="test.echo_throughput" depends="compile_tests">
        <run-test name="echo_throughput"/>
    </target>

    <target name="test.acceptor_perf" depends="compile_tests">
        <run-test name="acceptor_perf"/>
    </target>

</project>
